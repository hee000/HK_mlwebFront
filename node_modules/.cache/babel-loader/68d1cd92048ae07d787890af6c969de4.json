{"ast":null,"code":"var _jsxFileName = \"/Users/cho/Documents/GitHub_myspace/react/main/src/pages/Login.js\",\n    _s = $RefreshSig$();\n\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\nimport { Helmet } from 'react-helmet';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport { Box, Button, Container, Grid, Link, TextField, Typography } from '@material-ui/core';\nimport FacebookIcon from '../icons/Facebook';\nimport GoogleIcon from '../icons/Google';\nimport axios from 'axios';\nimport { logIn, logOut } from '../_reduxmodules/loginstore';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  const navigate = useNavigate();\n  const loginstate = useSelector(state => state.loggin);\n  const dispatch = useDispatch();\n\n  const logIn_ = (email, password) => dispatch(logIn(email, password));\n\n  const logOut_ = () => dispatch(logOut());\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Login | Material Kit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        backgroundColor: 'background.default',\n        display: 'flex',\n        flexDirection: 'column',\n        height: '100%',\n        justifyContent: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: \"sm\",\n        children: /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: {\n            email: 'demo@test.email.io',\n            password: 'Password123'\n          },\n          validationSchema: Yup.object().shape({\n            // email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n            password: Yup.string().max(255).required('Password is required')\n          }),\n          onSubmit: values => {\n            // // navigate('/app/dashboard', { replace: true });\n            // axios.post(\"http://localhost:4000/p\", {\n            //   username: \"test\",\n            //   password: \"password\"\n            // })\n            // .then(function (response) {\n            //     // response  \n            // }).catch(function (error) {\n            //     // 오류발생시 실행\n            // }).then(function() {\n            //     // 항상 실행\n            // });\n            axios.get(\"http://localhost:4000/login\", {\n              params: {\n                email: values.email,\n                password: values.password\n              }\n            }).then(function (response) {\n              // response  \n              logIn_(values.email, values.password);\n              navigate('/app/dashboard', {\n                replace: true\n              }); // console.log(\"로그인성공\");\n            }).catch(function (error) {\n              // 오류발생시 실행\n              console.log(error);\n              alert(\"아이디 혹은 비밀번호가 불일치\");\n              console.log(\"로그인실패\");\n            }).then(function () {// 항상 실행\n            }); // logOut_();\n            // console.log(loginstate);\n          },\n          children: ({\n            errors,\n            handleBlur,\n            handleChange,\n            handleSubmit,\n            isSubmitting,\n            touched,\n            values\n          }) => /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                mb: 3\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                color: \"textPrimary\",\n                variant: \"h2\",\n                children: \"Sign in\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                color: \"textSecondary\",\n                gutterBottom: true,\n                variant: \"body2\",\n                children: \"Sign in on the internal platform\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              error: Boolean(touched.email && errors.email),\n              fullWidth: true,\n              helperText: touched.email && errors.email,\n              label: \"Email Address\",\n              margin: \"normal\",\n              name: \"email\",\n              onBlur: handleBlur,\n              onChange: handleChange // type=\"email\"\n              ,\n              value: values.email,\n              variant: \"outlined\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              error: Boolean(touched.password && errors.password),\n              fullWidth: true,\n              helperText: touched.password && errors.password,\n              label: \"Password\",\n              margin: \"normal\",\n              name: \"password\",\n              onBlur: handleBlur,\n              onChange: handleChange,\n              type: \"password\",\n              value: values.password,\n              variant: \"outlined\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                py: 2\n              },\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                color: \"primary\" // disabled={isSubmitting}\n                ,\n                fullWidth: true,\n                size: \"large\",\n                type: \"submit\",\n                variant: \"contained\",\n                children: \"Sign in now\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              color: \"textSecondary\",\n              variant: \"body1\",\n              children: [\"Don't have an account?\", ' ', /*#__PURE__*/_jsxDEV(Link, {\n                component: RouterLink,\n                to: \"/register\",\n                variant: \"h6\",\n                underline: \"hover\",\n                children: \"Sign up\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Login, \"q4djYe5t7F7QNtoiVLz+mC6MIh4=\", false, function () {\n  return [useNavigate, useSelector, useDispatch];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/cho/Documents/GitHub_myspace/react/main/src/pages/Login.js"],"names":["Link","RouterLink","useNavigate","Helmet","Yup","Formik","Box","Button","Container","Grid","TextField","Typography","FacebookIcon","GoogleIcon","axios","logIn","logOut","useSelector","useDispatch","Login","navigate","loginstate","state","loggin","dispatch","logIn_","email","password","logOut_","backgroundColor","display","flexDirection","height","justifyContent","object","shape","string","max","required","values","get","params","then","response","replace","catch","error","console","log","alert","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","mb","Boolean","py"],"mappings":"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","sourcesContent":["import { Link as RouterLink, useNavigate } from 'react-router-dom';\nimport { Helmet } from 'react-helmet';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport {\n  Box,\n  Button,\n  Container,\n  Grid,\n  Link,\n  TextField,\n  Typography\n} from '@material-ui/core';\nimport FacebookIcon from '../icons/Facebook';\nimport GoogleIcon from '../icons/Google';\n\nimport axios from 'axios'\nimport { logIn, logOut } from '../_reduxmodules/loginstore';\nimport { useSelector, useDispatch } from 'react-redux';\n\n\n\nconst Login = () => {\n  const navigate = useNavigate();\n  const loginstate = useSelector(state => state.loggin);\n  const dispatch = useDispatch();\n  const logIn_ = (email, password) => dispatch(logIn(email, password));\n  const logOut_ = () => dispatch(logOut());\n\n\n  return (\n    <>\n      <Helmet>\n        <title>Login | Material Kit</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          display: 'flex',\n          flexDirection: 'column',\n          height: '100%',\n          justifyContent: 'center'\n        }}\n      >\n        <Container maxWidth=\"sm\">\n          <Formik\n            initialValues={{\n              email: 'demo@test.email.io',\n              password: 'Password123'\n            }}\n            validationSchema={Yup.object().shape({\n              // email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n              password: Yup.string().max(255).required('Password is required')\n            })}\n            onSubmit={(values) => {\n\n              // // navigate('/app/dashboard', { replace: true });\n              // axios.post(\"http://localhost:4000/p\", {\n              //   username: \"test\",\n              //   password: \"password\"\n              // })\n              // .then(function (response) {\n              //     // response  \n              // }).catch(function (error) {\n              //     // 오류발생시 실행\n              // }).then(function() {\n              //     // 항상 실행\n              // });\n\n              axios.get(\"http://localhost:4000/login\", {\n                params: {\n                    email: values.email,\n                    password : values.password\n                  }        \n              })\n              .then(function (response) {\n                  // response  \n                  logIn_(values.email, values.password);\n                  navigate('/app/dashboard', { replace: true });\n                  // console.log(\"로그인성공\");\n              }).catch(function (error) {\n                  // 오류발생시 실행\n                  console.log(error);\n                  alert(\"아이디 혹은 비밀번호가 불일치\")\n                  console.log(\"로그인실패\");\n              }).then(function() {\n                  // 항상 실행\n              });\n    \n\n\n              // logOut_();\n              // console.log(loginstate);\n            }}\n          >\n            {({\n              errors,\n              handleBlur,\n              handleChange,\n              handleSubmit,\n              isSubmitting,\n              touched,\n              values\n            }) => (\n              <form onSubmit={handleSubmit}>\n                <Box sx={{ mb: 3 }}>\n                  <Typography\n                    color=\"textPrimary\"\n                    variant=\"h2\"\n                  >\n                    Sign in\n                  </Typography>\n                  <Typography\n                    color=\"textSecondary\"\n                    gutterBottom\n                    variant=\"body2\"\n                  >\n                    Sign in on the internal platform\n                  </Typography>\n                </Box>\n                <TextField\n                  error={Boolean(touched.email && errors.email)}\n                  fullWidth\n                  helperText={touched.email && errors.email}\n                  label=\"Email Address\"\n                  margin=\"normal\"\n                  name=\"email\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  // type=\"email\"\n                  value={values.email}\n                  variant=\"outlined\"\n                />\n                <TextField\n                  error={Boolean(touched.password && errors.password)}\n                  fullWidth\n                  helperText={touched.password && errors.password}\n                  label=\"Password\"\n                  margin=\"normal\"\n                  name=\"password\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  type=\"password\"\n                  value={values.password}\n                  variant=\"outlined\"\n                />\n                <Box sx={{ py: 2 }}>\n                  <Button\n                    color=\"primary\"\n                    // disabled={isSubmitting}\n                    fullWidth\n                    size=\"large\"\n                    type=\"submit\"\n                    variant=\"contained\"\n                  >\n                    Sign in now\n                  </Button>\n                </Box>\n                <Typography\n                  color=\"textSecondary\"\n                  variant=\"body1\"\n                >\n                  Don&apos;t have an account?\n                  {' '}\n                  <Link component={RouterLink} to=\"/register\" variant=\"h6\" underline=\"hover\">\n                    Sign up\n                  </Link>\n                </Typography>\n              </form>\n            )}\n          </Formik>\n        </Container>\n      </Box>\n    </>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}